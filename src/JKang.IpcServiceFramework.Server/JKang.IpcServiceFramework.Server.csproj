<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RootNamespace>JKang.IpcServiceFramework</RootNamespace>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Authors>Jacques Kang</Authors>
    <Company />
    <Description>A lightweight .NET Core inter-process communication framework allowing invoking a service via named pipeline in a similar way as WCF.
This package is for server hosting.</Description>
    <Copyright>Jacques Kang</Copyright>
    <PackageLicenseUrl>https://github.com/jacqueskang/IpcServiceFramework/blob/develop/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/jacqueskang/IpcServiceFramework</PackageProjectUrl>
    <RepositoryUrl>https://github.com/jacqueskang/IpcServiceFramework</RepositoryUrl>
    <PackageTags>dotnetcore,named-pipes,interprocess-communication</PackageTags>
    <Version>1.0.2</Version>
    <PackageReleaseNotes>1.0.2
 - support implicitly converting input parameters from derived type to base type
1.0.1
 - support passing array parameters</PackageReleaseNotes>
    <AssemblyVersion>1.0.2.0</AssemblyVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\JKang.IpcServiceFramework.Core\JKang.IpcServiceFramework.Core.csproj" />
  </ItemGroup>
  
</Project>
